{
  "openapi": "3.0.0",
  "info": {
    "title": "Vehicle Parking Management System API",
    "version": "1.0.0",
    "description": "API for managing users, vehicles, parking slots, slot requests, and action logs with JWT authentication, pagination, search, and email notifications."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format":"uuid" },
          "name": { "type": "string" },
          "email": { "type": "string" },
          "role": { "type": "string", "enum": ["user", "admin"] },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "Vehicle": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format":"uuid" },
          "plate_number": { "type": "string" },
          "vehicle_type": { "type": "string", "enum": ["car", "motorcycle", "truck"] },
          "size": { "type": "string", "enum": ["small", "medium", "large"] },
          "attributes": { "type": "object" },
          "user_id": { "type": "string", "format":"uuid" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "ParkingSlot": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format":"uuid" },
          "slot_number": { "type": "string" },
          "size": { "type": "string", "enum": ["small", "medium", "large"] },
          "vehicle_type": { "type": "string", "enum": ["car", "motorcycle", "truck"] },
          "status": { "type": "string", "enum": ["available", "unavailable"] },
          "location": { "type": "string", "enum": ["north", "west", "east", "south"] },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "SlotRequest": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format":"uuid" },
          "user_id": { "type": "string", "format":"uuid" },
          "vehicle_id": { "type": "string", "format":"uuid" },
          "slot_id": { "type": "string", "format":"uuid", "nullable": "true" },
          "request_status": { "type": "string", "enum": ["pending", "approved", "rejected"] },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "Log": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format":"uuid" },
          "user_id": { "type": "string", "format":"uuid" },
          "action": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "PaginatedResponse": {
        "type": "object",
        "properties": {
          "totalItems": { "type": "integer" },
          "currentPage": { "type": "integer" },
          "totalPages": { "type": "integer" },
          "itemsPerPage": { "type": "integer" }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": { "type": "string" }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "msg": { "type": "string" },
                "param": { "type": "string" },
                "location": { "type": "string" }
              }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/api/users/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                  "name": { "type": "string", "example": "John Doe" },
                  "email": { "type": "string", "example": "john@example.com" },
                  "password": { "type": "string", "example": "password123" }, 
                  "role": {"type": "string", "example": "user"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "User registered successfully" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/ValidationError" },
                    { "$ref": "#/components/schemas/Error" }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "summary": "Login a user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": { "type": "string", "example": "john@example.com" },
                  "password": { "type": "string", "example": "password123" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ValidationError" }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/users/profile": {
      "put": {
        "summary": "Update user profile",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "John Doe" },
                  "email": { "type": "string", "example": "john@example.com" },
                  "password": { "type": "string", "example": "newpassword123" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Profile updated successfully" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ValidationError" }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "List users (admin only)",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": { "type": "integer", "default": 1 },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": { "type": "integer", "default": 10 },
            "description": "Items per page"
          },
          {
            "in": "query",
            "name": "search",
            "schema": { "type": "string", "default": "" },
            "description": "Search by name or email"
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/PaginatedResponse" },
                    {
                      "type": "object",
                      "properties": {
                        "users": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/User" }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "403": {
            "description": "Access denied (non-admin)",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/vehicles": {
      "post": {
        "summary": "Add a vehicle",
        "tags": ["Vehicles"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["plate_number", "vehicle_type", "size"],
                "properties": {
                  "plate_number": { "type": "string", "example": "RAA212A" },
                  "vehicle_type": { "type": "string", "enum": ["car", "motorcycle", "truck"], "example": "car" },
                  "size": { "type": "string", "enum": ["small", "medium", "large"], "example": "medium" },
                  "attributes": { "type": "object", "example": { "color": "blue" } }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Vehicle added successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Vehicle" }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ValidationError" }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List vehicles",
        "tags": ["Vehicles"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": { "type": "integer", "default": 1 },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": { "type": "integer", "default": 10 },
            "description": "Items per page"
          },
          {
            "in": "query",
            "name": "search",
            "schema": { "type": "string", "default": "" },
            "description": "Search by plate_number or vehicle_type"
          }
        ],
        "responses": {
          "200": {
            "description": "List of vehicles",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/PaginatedResponse" },
                    {
                      "type": "object",
                      "properties": {
                        "vehicles": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Vehicle" }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/vehicles/{id}": {
      "put": {
        "summary": "Update a vehicle",
        "tags": ["Vehicles"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "integer" },
            "description": "Vehicle ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "plate_number": { "type": "string", "example": "RAA212A" },
                  "vehicle_type": { "type": "string", "enum": ["car", "motorcycle", "truck"], "example": "car" },
                  "size": { "type": "string", "enum": ["small", "medium", "large"], "example": "medium" },
                  "attributes": { "type": "object", "example": { "color": "blue" } }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vehicle updated successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Vehicle" }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ValidationError" }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "404": {
            "description": "Vehicle not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a vehicle",
        "tags": ["Vehicles"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "integer" },
            "description": "Vehicle ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Vehicle deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Vehicle deleted successfully" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "404": {
            "description": "Vehicle not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/slots/bulk": {
      "post": {
        "summary": "Bulk create parking slots (admin only)",
        "tags": ["ParkingSlots"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "slots": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": ["slot_number", "size", "vehicle_type", "location"],
                      "properties": {
                        "slot_number": { "type": "string", "example": "S001" },
                        "size": { "type": "string", "enum": ["small", "medium", "large"], "example": "medium" },
                        "vehicle_type": { "type": "string", "enum": ["car", "motorcycle", "truck"], "example": "car" },
                        "location": { "type": "string", "enum": ["north", "west", "east", "south"], "example": "north" }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Slots created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ParkingSlot" }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ValidationError" }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "403": {
            "description": "Access denied (non-admin)",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/slots/{id}": {
      "put": {
        "summary": "Update a parking slot (admin only)",
        "tags": ["ParkingSlots"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string", "format":"uuid" },
            "description": "Slot ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "slot_number": { "type": "string", "example": "S001" },
                  "size": { "type": "string", "enum": ["small", "medium", "large"], "example": "medium" },
                  "vehicle_type": { "type": "string", "enum": ["car", "motorcycle", "truck"], "example": "car" },
                  "location": { "type": "string", "enum": ["north", "west", "east", "south"], "example": "north" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Slot updated successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ParkingSlot" }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ValidationError" }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "403": {
            "description": "Access denied (non-admin)",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "404": {
            "description": "Slot not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a parking slot (admin only)",
        "tags": ["ParkingSlots"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string", "format":"uuid" },
            "description": "Slot ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Slot deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Slot deleted successfully" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "403": {
            "description": "Access denied (non-admin)",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "404": {
            "description": "Slot not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/slots": {
      "get": {
        "summary": "List parking slots",
        "tags": ["ParkingSlots"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": { "type": "integer", "default": 1 },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": { "type": "integer", "default": 10 },
            "description": "Items per page"
          },
          {
            "in": "query",
            "name": "search",
            "schema": { "type": "string", "default": "" },
            "description": "Search by slot_number, vehicle_type, or size"
          }
        ],
        "responses": {
          "200": {
            "description": "List of slots (users see available, admins see all)",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/PaginatedResponse" },
                    {
                      "type": "object",
                      "properties": {
                        "slots": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/ParkingSlot" }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/requests": {
      "post": {
        "summary": "Create a slot request",
        "tags": ["SlotRequests"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["vehicle_id"],
                "properties": {
                  "vehicle_id": { "type": "string", "format":"uuid", "example": "123e4567-e89b-12d3-a456-426614174000" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Slot request created successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SlotRequest" }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ValidationError" }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "404": {
            "description": "Vehicle not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List slot requests",
        "tags": ["SlotRequests"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": { "type": "integer", "default": 1 },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": { "type": "integer", "default": 10 },
            "description": "Items per page"
          },
          {
            "in": "query",
            "name": "search",
            "schema": { "type": "string", "default": "" },
            "description": "Search by request_status"
          }
        ],
        "responses": {
          "200": {
            "description": "List of slot requests (users see own, admins see all)",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/PaginatedResponse" },
                    {
                      "type": "object",
                      "properties": {
                        "requests": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/SlotRequest" }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/requests/{id}": {
      "put": {
        "summary": "Update a slot request",
        "tags": ["SlotRequests"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string", "format":"uuid" },
            "description": "Request ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vehicle_id": { "type": "string", "format":"uuid", "example": "123e4567-e89b-12d3-a456-426614174000" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Slot request updated successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SlotRequest" }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ValidationError" }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "404": {
            "description": "Request or vehicle not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a slot request",
        "tags": ["SlotRequests"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string", "format":"uuid" },
            "description": "Request ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Slot request deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Request deleted successfully" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "404": {
            "description": "Request not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/requests/{id}/status": {
      "put": {
        "summary": "Approve or reject a slot request (admin only)",
        "tags": ["SlotRequests"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string", "format":"uuid" },
            "description": "Request ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["request_status"],
                "properties": {
                  "request_status": { "type": "string", "enum": ["approved", "rejected"], "example": "approved" },
                  "slot_id": { "type": "string", "format":"uuid", "description": "Required if request_status is approved" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Slot request status updated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SlotRequest" }
              }
            }
          },
          "400": {
            "description": "Invalid input or slot",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ValidationError" }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "403": {
            "description": "Access denied (non-admin)",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "404": {
            "description": "Request or slot not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/logs": {
      "get": {
        "summary": "List action logs (admin only)",
        "tags": ["Logs"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": { "type": "integer", "default": 1 },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": { "type": "integer", "default": 10 },
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "List of logs",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/PaginatedResponse" },
                    {
                      "type": "object",
                      "properties": {
                        "logs": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Log" }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "403": {
            "description": "Access denied (non-admin)",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    }
  }
}